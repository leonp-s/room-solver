{"ast":null,"code":"import _slicedToArray from \"/Users/LeonP-S/Documents/Development/Web/room-solver/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js\";\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\n\nconst RoomInputGrid = props => {\n  const _useState = useState({\n    data: props.data,\n    resolve: () => {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        tableData = _useState2[0],\n        setTableData = _useState2[1];\n\n  useEffect(() => {\n    tableData.resolve();\n  }, [tableData]);\n  return React.createElement(MaterialTable, {\n    options: {\n      search: false\n    },\n    columns: [{\n      title: \"Material\",\n      field: \"Material\"\n    }, {\n      title: \"Area (M^2)\",\n      field: \"Area\",\n      type: \"numeric\"\n    }],\n    data: tableData.data,\n    title: \"Room Construction\",\n    editable: {\n      onRowAdd: newData => {\n        return new Promise((resolve, reject) => {\n          const data = tableData.data;\n          data.push(newData);\n          setTableData({\n            data,\n            resolve\n          });\n          console.log(data);\n          props.updatePlot(RoomSolver(data, 18));\n        });\n      },\n      onRowUpdate: (newData, oldData) => {\n        return new Promise((resolve, reject) => {\n          const data = tableData.data;\n          const index = data.indexOf(oldData);\n          data[index] = newData;\n          setTableData({\n            data,\n            resolve\n          });\n        });\n      },\n      onRowDelete: oldData => {\n        return new Promise((resolve, reject) => {\n          const data = tableData.data;\n          const index = data.indexOf(oldData);\n          data.splice(index, 1);\n          setTableData({\n            data,\n            resolve\n          });\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  });\n};\n\nexport default RoomInputGrid;","map":{"version":3,"sources":["/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js"],"names":["React","useState","useEffect","MaterialTable","Grid","RoomInputGrid","props","data","resolve","tableData","setTableData","search","title","field","type","onRowAdd","newData","Promise","reject","push","console","log","updatePlot","RoomSolver","onRowUpdate","oldData","index","indexOf","onRowDelete","splice"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA,oBACKL,QAAQ,CAAC;AACvCM,IAAAA,IAAI,EAAED,KAAK,CAACC,IAD2B;AAEvCC,IAAAA,OAAO,EAAE,MAAM,CAAE;AAFsB,GAAD,CADb;AAAA;AAAA,QACtBC,SADsB;AAAA,QACXC,YADW;;AAM7BR,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS,CAACD,OAAV;AACH,GAFQ,EAEN,CAACC,SAAD,CAFM,CAAT;AAIA,SACI,oBAAC,aAAD;AACE,IAAA,OAAO,EAAE;AACPE,MAAAA,MAAM,EAAE;AADD,KADX;AAIE,IAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KADO,EAEP;AAAED,MAAAA,KAAK,EAAE,YAAT;AAAuBC,MAAAA,KAAK,EAAE,MAA9B;AAAsCC,MAAAA,IAAI,EAAE;AAA5C,KAFO,CAJX;AAQE,IAAA,IAAI,EAAEL,SAAS,CAACF,IARlB;AASE,IAAA,KAAK,EAAC,mBATR;AAUE,IAAA,QAAQ,EAAE;AACRQ,MAAAA,QAAQ,EAAEC,OAAO,IAAI;AACjB,eAAO,IAAIC,OAAJ,CAAY,CAACT,OAAD,EAAUU,MAAV,KAAqB;AAAA,gBAC5BX,IAD4B,GACnBE,SADmB,CAC5BF,IAD4B;AAEpCA,UAAAA,IAAI,CAACY,IAAL,CAAUH,OAAV;AACAN,UAAAA,YAAY,CAAC;AAACH,YAAAA,IAAD;AAAOC,YAAAA;AAAP,WAAD,CAAZ;AACAY,UAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACAD,UAAAA,KAAK,CAACgB,UAAN,CAAiBC,UAAU,CAAChB,IAAD,EAAM,EAAN,CAA3B;AACH,SANM,CAAP;AAOH,OATO;AAURiB,MAAAA,WAAW,EAAE,CAACR,OAAD,EAAUS,OAAV,KAAsB;AAC/B,eAAO,IAAIR,OAAJ,CAAY,CAACT,OAAD,EAAUU,MAAV,KAAqB;AAAA,gBAC5BX,IAD4B,GACnBE,SADmB,CAC5BF,IAD4B;AAEpC,gBAAMmB,KAAK,GAAGnB,IAAI,CAACoB,OAAL,CAAaF,OAAb,CAAd;AACAlB,UAAAA,IAAI,CAACmB,KAAD,CAAJ,GAAcV,OAAd;AACAN,UAAAA,YAAY,CAAC;AAACH,YAAAA,IAAD;AAAOC,YAAAA;AAAP,WAAD,CAAZ;AACH,SALM,CAAP;AAMH,OAjBO;AAkBRoB,MAAAA,WAAW,EAAEH,OAAO,IAAI;AACpB,eAAO,IAAIR,OAAJ,CAAY,CAACT,OAAD,EAAUU,MAAV,KAAqB;AAAA,gBAC5BX,IAD4B,GACnBE,SADmB,CAC5BF,IAD4B;AAEpC,gBAAMmB,KAAK,GAAGnB,IAAI,CAACoB,OAAL,CAAaF,OAAb,CAAd;AACAlB,UAAAA,IAAI,CAACsB,MAAL,CAAYH,KAAZ,EAAmB,CAAnB;AACAhB,UAAAA,YAAY,CAAC;AAACH,YAAAA,IAAD;AAAOC,YAAAA;AAAP,WAAD,CAAZ;AACH,SALM,CAAP;AAMH;AAzBO,KAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAyCH,CAnDD;;AAqDA,eAAeH,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\n\nconst RoomInputGrid = (props) => {\n    const [tableData, setTableData] = useState({\n        data: props.data,\n        resolve: () => {}\n    });\n\n    useEffect(() => {\n        tableData.resolve();\n    }, [tableData]);\n\n    return (\n        <MaterialTable\n          options={{\n            search: false\n          }}\n          columns={[\n            { title: \"Material\", field: \"Material\" },\n            { title: \"Area (M^2)\", field: \"Area\", type: \"numeric\" },\n          ]}\n          data={tableData.data}\n          title=\"Room Construction\"\n          editable={{\n            onRowAdd: newData => { \n                return new Promise((resolve, reject) => {\n                    const { data } = tableData;\n                    data.push(newData);\n                    setTableData({data, resolve});\n                    console.log(data);\n                    props.updatePlot(RoomSolver(data,18));\n                }); \n            },\n            onRowUpdate: (newData, oldData) => {\n                return new Promise((resolve, reject) => {\n                    const { data } = tableData;\n                    const index = data.indexOf(oldData);\n                    data[index] = newData;\n                    setTableData({data, resolve});\n                }); \n            },\n            onRowDelete: oldData => {\n                return new Promise((resolve, reject) => {\n                    const { data } = tableData;\n                    const index = data.indexOf(oldData);\n                    data.splice(index, 1);\n                    setTableData({data, resolve});\n                }); \n            }\n\n        }}\n        />\n    );\n};\n\nexport default RoomInputGrid;"]},"metadata":{},"sourceType":"module"}