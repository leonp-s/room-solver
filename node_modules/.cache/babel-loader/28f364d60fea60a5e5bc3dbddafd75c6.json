{"ast":null,"code":"'use strict';\n\nvar React = require('react'); // Used to cancel events.\n\n\nvar preventDefault = function preventDefault(e) {\n  return e.preventDefault();\n};\n\nvar Pagination = React.createClass({\n  displayName: 'Pagination',\n  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {\n    var props = this.props;\n    return props.totalPages !== nextProps.totalPages || props.currentPage !== nextProps.currentPage || props.showPages !== nextProps.showPages;\n  },\n  propTypes: {\n    onChangePage: React.PropTypes.func.isRequired,\n    totalPages: React.PropTypes.number.isRequired,\n    currentPage: React.PropTypes.number.isRequired,\n    showPages: React.PropTypes.number\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      showPages: 5\n    };\n  },\n  onChangePage: function onChangePage(pageNumber, event) {\n    event.preventDefault();\n    this.props.onChangePage(pageNumber);\n  },\n  render: function render() {\n    var _props = this.props,\n        totalPages = _props.totalPages,\n        showPages = _props.showPages,\n        currentPage = _props.currentPage;\n\n    if (totalPages === 0) {\n      return null;\n    }\n\n    var diff = Math.floor(showPages / 2),\n        start = Math.max(currentPage - diff, 0),\n        end = Math.min(start + showPages, totalPages);\n\n    if (totalPages >= showPages && end >= totalPages) {\n      start = totalPages - showPages;\n    }\n\n    var buttons = [],\n        btnEvent,\n        isCurrent;\n\n    for (var i = start; i < end; i++) {\n      isCurrent = currentPage === i; // If the button is for the current page then disable the event.\n\n      if (isCurrent) {\n        btnEvent = preventDefault;\n      } else {\n        btnEvent = this.onChangePage.bind(this, i);\n      }\n\n      buttons.push(React.createElement('li', {\n        key: i,\n        className: isCurrent ? 'active' : null\n      }, React.createElement('a', {\n        role: 'button',\n        href: '#',\n        onClick: btnEvent,\n        tabIndex: '0'\n      }, React.createElement('span', null, i + 1), isCurrent ? React.createElement('span', {\n        className: 'sr-only'\n      }, '(current)') : null)));\n    } // First and Prev button handlers and class.\n\n\n    var firstHandler = preventDefault;\n    var prevHandler = preventDefault;\n    var isNotFirst = currentPage > 0;\n\n    if (isNotFirst) {\n      firstHandler = this.onChangePage.bind(this, 0);\n      prevHandler = this.onChangePage.bind(this, currentPage - 1);\n    } // Next and Last button handlers and class.\n\n\n    var nextHandler = preventDefault;\n    var lastHandler = preventDefault;\n    var isNotLast = currentPage < totalPages - 1;\n\n    if (isNotLast) {\n      nextHandler = this.onChangePage.bind(this, currentPage + 1);\n      lastHandler = this.onChangePage.bind(this, totalPages - 1);\n    }\n\n    return React.createElement('ul', {\n      className: this.props.className,\n      'aria-label': 'Pagination'\n    }, React.createElement('li', {\n      className: !isNotFirst ? 'disabled' : null\n    }, React.createElement('a', {\n      role: 'button',\n      href: '#',\n      tabIndex: '0',\n      onClick: firstHandler,\n      'aria-disabled': !isNotFirst,\n      'aria-label': 'First'\n    }, React.createElement('span', {\n      className: 'fa fa-angle-double-left',\n      'aria-hidden': 'true'\n    }))), React.createElement('li', {\n      className: !isNotFirst ? 'disabled' : null\n    }, React.createElement('a', {\n      role: 'button',\n      href: '#',\n      tabIndex: '0',\n      onClick: prevHandler,\n      'aria-disabled': !isNotFirst,\n      'aria-label': 'Previous'\n    }, React.createElement('span', {\n      className: 'fa fa-angle-left',\n      'aria-hidden': 'true'\n    }))), buttons, React.createElement('li', {\n      className: !isNotLast ? 'disabled' : null\n    }, React.createElement('a', {\n      role: 'button',\n      href: '#',\n      tabIndex: '0',\n      onClick: nextHandler,\n      'aria-disabled': !isNotLast,\n      'aria-label': 'Next'\n    }, React.createElement('span', {\n      className: 'fa fa-angle-right',\n      'aria-hidden': 'true'\n    }))), React.createElement('li', {\n      className: !isNotLast ? 'disabled' : null\n    }, React.createElement('a', {\n      role: 'button',\n      href: '#',\n      tabIndex: '0',\n      onClick: lastHandler,\n      'aria-disabled': !isNotLast,\n      'aria-label': 'Last'\n    }, React.createElement('span', {\n      className: 'fa fa-angle-double-right',\n      'aria-hidden': 'true'\n    }))));\n  }\n});\nmodule.exports = Pagination;","map":null,"metadata":{},"sourceType":"script"}