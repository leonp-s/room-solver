{"ast":null,"code":"import _slicedToArray from\"/Users/LeonP-S/Documents/Development/Web/room-solver/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import MaterialTable from'material-table';var RoomInputGrid=function RoomInputGrid(props){var _useState=useState({data:props.data,resolve:function resolve(){}}),_useState2=_slicedToArray(_useState,2),tableData=_useState2[0],setTableData=_useState2[1];useEffect(function(){tableData.resolve();props.updatePlot(tableData.data);},[tableData]);return React.createElement(MaterialTable,{options:{search:false},columns:[{title:\"Material\",field:\"Material\"},{title:\"Area (M^2)\",field:\"Area\",type:\"numeric\"}],data:tableData.data,title:\"Room Construction\",editable:{onRowAdd:function onRowAdd(newData){return new Promise(function(resolve,reject){var data=tableData.data;data.push(newData);setTableData({data:data,resolve:resolve});});},onRowUpdate:function onRowUpdate(newData,oldData){return new Promise(function(resolve,reject){var data=tableData.data;var index=data.indexOf(oldData);data[index]=newData;setTableData({data:data,resolve:resolve});});},onRowDelete:function onRowDelete(oldData){return new Promise(function(resolve,reject){var data=tableData.data;var index=data.indexOf(oldData);data.splice(index,1);setTableData({data:data,resolve:resolve});});}}});};export default RoomInputGrid;","map":{"version":3,"sources":["/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js"],"names":["React","useState","useEffect","MaterialTable","RoomInputGrid","props","data","resolve","tableData","setTableData","updatePlot","search","title","field","type","onRowAdd","newData","Promise","reject","push","onRowUpdate","oldData","index","indexOf","onRowDelete","splice"],"mappings":"uIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,eACKJ,QAAQ,CAAC,CACvCK,IAAI,CAAED,KAAK,CAACC,IAD2B,CAEvCC,OAAO,CAAE,kBAAM,CAAE,CAFsB,CAAD,CADb,wCACtBC,SADsB,eACXC,YADW,eAM7BP,SAAS,CAAC,UAAM,CACZM,SAAS,CAACD,OAAV,GACAF,KAAK,CAACK,UAAN,CAAiBF,SAAS,CAACF,IAA3B,EACH,CAHQ,CAGN,CAACE,SAAD,CAHM,CAAT,CAKA,MACI,qBAAC,aAAD,EACE,OAAO,CAAE,CACPG,MAAM,CAAE,KADD,CADX,CAIE,OAAO,CAAE,CACP,CAAEC,KAAK,CAAE,UAAT,CAAqBC,KAAK,CAAE,UAA5B,CADO,CAEP,CAAED,KAAK,CAAE,YAAT,CAAuBC,KAAK,CAAE,MAA9B,CAAsCC,IAAI,CAAE,SAA5C,CAFO,CAJX,CAQE,IAAI,CAAEN,SAAS,CAACF,IARlB,CASE,KAAK,CAAC,mBATR,CAUE,QAAQ,CAAE,CACRS,QAAQ,CAAE,kBAAAC,OAAO,CAAI,CACjB,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACV,OAAD,CAAUW,MAAV,CAAqB,IAC5BZ,CAAAA,IAD4B,CACnBE,SADmB,CAC5BF,IAD4B,CAEpCA,IAAI,CAACa,IAAL,CAAUH,OAAV,EACAP,YAAY,CAAC,CAACH,IAAI,CAAJA,IAAD,CAAOC,OAAO,CAAPA,OAAP,CAAD,CAAZ,CACH,CAJM,CAAP,CAKH,CAPO,CAQRa,WAAW,CAAE,qBAACJ,OAAD,CAAUK,OAAV,CAAsB,CAC/B,MAAO,IAAIJ,CAAAA,OAAJ,CAAY,SAACV,OAAD,CAAUW,MAAV,CAAqB,IAC5BZ,CAAAA,IAD4B,CACnBE,SADmB,CAC5BF,IAD4B,CAEpC,GAAMgB,CAAAA,KAAK,CAAGhB,IAAI,CAACiB,OAAL,CAAaF,OAAb,CAAd,CACAf,IAAI,CAACgB,KAAD,CAAJ,CAAcN,OAAd,CACAP,YAAY,CAAC,CAACH,IAAI,CAAJA,IAAD,CAAOC,OAAO,CAAPA,OAAP,CAAD,CAAZ,CACH,CALM,CAAP,CAMH,CAfO,CAgBRiB,WAAW,CAAE,qBAAAH,OAAO,CAAI,CACpB,MAAO,IAAIJ,CAAAA,OAAJ,CAAY,SAACV,OAAD,CAAUW,MAAV,CAAqB,IAC5BZ,CAAAA,IAD4B,CACnBE,SADmB,CAC5BF,IAD4B,CAEpC,GAAMgB,CAAAA,KAAK,CAAGhB,IAAI,CAACiB,OAAL,CAAaF,OAAb,CAAd,CACAf,IAAI,CAACmB,MAAL,CAAYH,KAAZ,CAAmB,CAAnB,EACAb,YAAY,CAAC,CAACH,IAAI,CAAJA,IAAD,CAAOC,OAAO,CAAPA,OAAP,CAAD,CAAZ,CACH,CALM,CAAP,CAMH,CAvBO,CAVZ,EADJ,CAuCH,CAlDD,CAoDA,cAAeH,CAAAA,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport MaterialTable from 'material-table';\n\nconst RoomInputGrid = (props) => {\n    const [tableData, setTableData] = useState({\n        data: props.data,\n        resolve: () => {}\n    });\n\n    useEffect(() => {\n        tableData.resolve();\n        props.updatePlot(tableData.data);\n    }, [tableData]);\n\n    return (\n        <MaterialTable\n          options={{\n            search: false\n          }}\n          columns={[\n            { title: \"Material\", field: \"Material\" },\n            { title: \"Area (M^2)\", field: \"Area\", type: \"numeric\" },\n          ]}\n          data={tableData.data}\n          title=\"Room Construction\"\n          editable={{\n            onRowAdd: newData => { \n                return new Promise((resolve, reject) => {\n                    const { data } = tableData;\n                    data.push(newData);\n                    setTableData({data, resolve});\n                }); \n            },\n            onRowUpdate: (newData, oldData) => {\n                return new Promise((resolve, reject) => {\n                    const { data } = tableData;\n                    const index = data.indexOf(oldData);\n                    data[index] = newData;\n                    setTableData({data, resolve});\n                }); \n            },\n            onRowDelete: oldData => {\n                return new Promise((resolve, reject) => {\n                    const { data } = tableData;\n                    const index = data.indexOf(oldData);\n                    data.splice(index, 1);\n                    setTableData({data, resolve});\n                }); \n            }\n\n        }}\n        />\n    );\n};\n\nexport default RoomInputGrid;"]},"metadata":{},"sourceType":"module"}