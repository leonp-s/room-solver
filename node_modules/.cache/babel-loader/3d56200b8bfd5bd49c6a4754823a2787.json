{"ast":null,"code":"var _jsxFileName = \"/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/LineGraph.js\";\nimport React from 'react';\nimport { Chart } from 'react-charts';\n\nfunction MyChart() {\n  const data = React.useMemo(() => [{\n    label: 'Series 1',\n    data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n  }, {\n    label: 'Series 2',\n    data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n  }], []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: 'linear',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  const lineChart = // A react-chart hyper-responsively and continuusly fills the available\n  // space of its parent element automatically\n  React.createElement(\"div\", {\n    style: {\n      width: '400px',\n      height: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    data: data,\n    axes: axes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n  return lineChart;\n}\n\nexport default MyChart;","map":{"version":3,"sources":["/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/LineGraph.js"],"names":["React","Chart","MyChart","data","useMemo","label","axes","primary","type","position","lineChart","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,SAASC,OAAT,GAAmB;AACf,QAAMC,IAAI,GAAGH,KAAK,CAACI,OAAN,CACT,MAAM,CACN;AACIC,IAAAA,KAAK,EAAE,UADX;AAEIF,IAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC;AAFV,GADM,EAKN;AACIE,IAAAA,KAAK,EAAE,UADX;AAEIF,IAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC;AAFV,GALM,CADG,EAWT,EAXS,CAAb;AAcA,QAAMG,IAAI,GAAGN,KAAK,CAACI,OAAN,CACT,MAAM,CACN;AAAEG,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,IAAI,EAAE,QAAvB;AAAiCC,IAAAA,QAAQ,EAAE;AAA3C,GADM,EAEN;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFM,CADG,EAKT,EALS,CAAb;AAQA,QAAMC,SAAS,GACX;AACA;AACA;AACA,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,OADJ;AAEHC,MAAAA,MAAM,EAAE;AAFL,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAET,IAAb;AAAmB,IAAA,IAAI,EAAEG,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CAHJ;AAaA,SAAOI,SAAP;AACH;;AAED,eAAeR,OAAf","sourcesContent":["import React from 'react';\nimport { Chart } from 'react-charts'\n\nfunction MyChart() {\n    const data = React.useMemo(\n        () => [\n        {\n            label: 'Series 1',\n            data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n        },\n        {\n            label: 'Series 2',\n            data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n        }\n        ],\n        []\n    )\n\n    const axes = React.useMemo(\n        () => [\n        { primary: true, type: 'linear', position: 'bottom' },\n        { type: 'linear', position: 'left' }\n        ],\n        []\n    )\n\n    const lineChart = (\n        // A react-chart hyper-responsively and continuusly fills the available\n        // space of its parent element automatically\n        <div\n        style={{\n            width: '400px',\n            height: '300px'\n        }}\n        >\n        <Chart data={data} axes={axes} />\n        </div>\n    )\n\n    return lineChart;\n}\n\nexport default MyChart;"]},"metadata":{},"sourceType":"module"}