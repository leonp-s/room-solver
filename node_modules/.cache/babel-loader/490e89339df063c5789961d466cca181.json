{"ast":null,"code":"import _defineProperty from \"/Users/LeonP-S/Documents/Development/Web/room-solver/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/LeonP-S/Documents/Development/Web/room-solver/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport ReactDataGrid from 'react-data-grid';\n\nconst RoomInputGrid = () => {\n  const columns = [{\n    key: \"material\",\n    name: \"Material\",\n    editable: true\n  }, {\n    key: \"area\",\n    name: \"Area (m^2)\",\n    editable: true\n  }];\n  const rows = [{\n    material: \"Brick\",\n    area: 24\n  }, {\n    material: \"Concrete\",\n    area: 9\n  }, {\n    material: \"Plaster\",\n    area: 9\n  }];\n\n  const _useState = useState(rows),\n        _useState2 = _slicedToArray(_useState, 2),\n        tableData = _useState2[0],\n        updateTable = _useState2[1];\n\n  const onGridRowsUpdated = ({\n    fromRow,\n    toRow,\n    updated\n  }) => {\n    updateTable(state => {\n      const rowsUpdate = tableData.slice();\n\n      for (let i = fromRow; i <= toRow; i++) {\n        rowsUpdate[i] = _objectSpread({}, rowsUpdate[i], {}, updated);\n      }\n\n      return rowsUpdate;\n    });\n  };\n\n  const addMaterial = () => {\n    updateTable(state => {\n      state.push({\n        material: \"New Material\",\n        area: 0\n      });\n      return state;\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Room Construction\"), React.createElement(\"div\", {\n    className: \"row center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col s12 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(ReactDataGrid, {\n    columns: columns,\n    rowGetter: i => tableData[i],\n    rowsCount: tableData.length,\n    onGridRowsUpdated: onGridRowsUpdated,\n    enableCellSelect: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    className: \"btn\",\n    onClick: () => {\n      addMaterial();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Add Material\"))));\n};\n\nexport default RoomInputGrid;","map":{"version":3,"sources":["/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js"],"names":["React","useState","ReactDataGrid","RoomInputGrid","columns","key","name","editable","rows","material","area","tableData","updateTable","onGridRowsUpdated","fromRow","toRow","updated","state","rowsUpdate","slice","i","addMaterial","push","length"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAMC,OAAO,GAAG,CACZ;AAAEC,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,IAAI,EAAE,UAAzB;AAAqCC,IAAAA,QAAQ,EAAE;AAA/C,GADY,EAEZ;AAAEF,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,IAAI,EAAE,YAArB;AAAmCC,IAAAA,QAAQ,EAAE;AAA7C,GAFY,CAAhB;AAKA,QAAMC,IAAI,GAAG,CACT;AAAEC,IAAAA,QAAQ,EAAE,OAAZ;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GADS,EAET;AAAED,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAFS,EAGT;AAAED,IAAAA,QAAQ,EAAE,SAAZ;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAHS,CAAb;;AANwB,oBAYST,QAAQ,CAACO,IAAD,CAZjB;AAAA;AAAA,QAYjBG,SAZiB;AAAA,QAYNC,WAZM;;AAcxB,QAAMC,iBAAiB,GAAG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAAiC;AACvDJ,IAAAA,WAAW,CAACK,KAAK,IAAI;AACnB,YAAMC,UAAU,GAAGP,SAAS,CAACQ,KAAV,EAAnB;;AACA,WAAK,IAAIC,CAAC,GAAGN,OAAb,EAAsBM,CAAC,IAAIL,KAA3B,EAAkCK,CAAC,EAAnC,EAAuC;AACrCF,QAAAA,UAAU,CAACE,CAAD,CAAV,qBAAqBF,UAAU,CAACE,CAAD,CAA/B,MAAuCJ,OAAvC;AACD;;AACD,aAAOE,UAAP;AACD,KANU,CAAX;AAOH,GARD;;AAUA,QAAMG,WAAW,GAAG,MAAM;AACtBT,IAAAA,WAAW,CAACK,KAAK,IAAI;AACjBA,MAAAA,KAAK,CAACK,IAAN,CAAW;AAAEb,QAAAA,QAAQ,EAAE,cAAZ;AAA4BC,QAAAA,IAAI,EAAE;AAAlC,OAAX;AACA,aAAOO,KAAP;AACH,KAHU,CAAX;AAIH,GALD;;AAOA,SACI,0CACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AACA,IAAA,OAAO,EAAEb,OADT;AAEA,IAAA,SAAS,EAAEgB,CAAC,IAAIT,SAAS,CAACS,CAAD,CAFzB;AAGA,IAAA,SAAS,EAAET,SAAS,CAACY,MAHrB;AAIA,IAAA,iBAAiB,EAAEV,iBAJnB;AAKA,IAAA,gBAAgB,EAAE,IALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAUI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC,KAAtB;AAA4B,IAAA,OAAO,EAAE,MAAM;AAAEQ,MAAAA,WAAW;AAAI,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAVJ,CAFJ,CADJ;AAoBH,CAnDD;;AAqDA,eAAelB,aAAf","sourcesContent":["import React, {useState} from 'react';\nimport ReactDataGrid from 'react-data-grid';\n\nconst RoomInputGrid = () => {\n    const columns = [\n        { key: \"material\", name: \"Material\", editable: true },\n        { key: \"area\", name: \"Area (m^2)\", editable: true },\n    ];\n      \n    const rows = [\n        { material: \"Brick\", area: 24},\n        { material: \"Concrete\", area: 9},\n        { material: \"Plaster\", area: 9}\n    ];\n\n    const [tableData, updateTable] = useState(rows);\n\n    const onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\n        updateTable(state => {\n          const rowsUpdate = tableData.slice();\n          for (let i = fromRow; i <= toRow; i++) {\n            rowsUpdate[i] = { ...rowsUpdate[i], ...updated };\n          }\n          return rowsUpdate;\n        });\n    };\n\n    const addMaterial = () => {\n        updateTable(state => {\n            state.push({ material: \"New Material\", area: 0});\n            return state\n        });\n    }\n\n    return (\n        <>\n            <h4 className=\"center\">Room Construction</h4>\n            <div className=\"row center\">\n                <div className=\"col s12 \">\n                    <ReactDataGrid\n                    columns={columns}\n                    rowGetter={i => tableData[i]}\n                    rowsCount={tableData.length}\n                    onGridRowsUpdated={onGridRowsUpdated}\n                    enableCellSelect={true}\n                    />\n                </div>\n                <div className=\"col s12\">\n                    <a href=\"#\" className=\"btn\" onClick={() => { addMaterial() }}>Add Material</a>\n                </div>\n            </div>\n        </>\n        \n    );\n};\n\nexport default RoomInputGrid;\n  "]},"metadata":{},"sourceType":"module"}