{"ast":null,"code":"import _slicedToArray from \"/Users/LeonP-S/Documents/Development/Web/room-solver/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js\";\nimport React, { useState } from 'react';\nimport MaterialTable from 'material-table';\n\nconst RoomInputGrid = props => {\n  const _useState = useState([{\n    Material: \"Concrete\",\n    Area: 22\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tableData = _useState2[0],\n        setData = _useState2[1];\n\n  console.log(tableData);\n  return React.createElement(MaterialTable, {\n    columns: [{\n      title: \"Material\",\n      field: \"Material\"\n    }, {\n      title: \"Area (M^2)\",\n      field: \"Area\",\n      type: \"numeric\"\n    }],\n    data: tableData,\n    title: \"Room Construction\",\n    editable: {\n      onRowAdd: newData => {\n        return new Promise((resolve, reject) => {\n          let data = tableData;\n          data.push(newData);\n          console.log(data);\n          setData(data);\n          resolve();\n        });\n      },\n      onRowUpdate: (newData, oldData) => {\n        return new Promise((resolve, reject) => {\n          //setData(newData);\n          resolve();\n        });\n      },\n      onRowDelete: oldData => {\n        return new Promise((resolve, reject) => {\n          resolve();\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n};\n\nexport default RoomInputGrid;","map":{"version":3,"sources":["/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js"],"names":["React","useState","MaterialTable","RoomInputGrid","props","Material","Area","tableData","setData","console","log","title","field","type","onRowAdd","newData","Promise","resolve","reject","data","push","onRowUpdate","oldData","onRowDelete"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA,oBACAH,QAAQ,CAAC,CAClC;AAAEI,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GADkC,CAAD,CADR;AAAA;AAAA,QACtBC,SADsB;AAAA,QACXC,OADW;;AAK7BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,SACI,oBAAC,aAAD;AACE,IAAA,OAAO,EAAE,CACP;AAAEI,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KADO,EAEP;AAAED,MAAAA,KAAK,EAAE,YAAT;AAAuBC,MAAAA,KAAK,EAAE,MAA9B;AAAsCC,MAAAA,IAAI,EAAE;AAA5C,KAFO,CADX;AAKE,IAAA,IAAI,EAAEN,SALR;AAME,IAAA,KAAK,EAAC,mBANR;AAOE,IAAA,QAAQ,EAAE;AACRO,MAAAA,QAAQ,EAAEC,OAAO,IAAI;AAAE,eAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC3D,cAAIC,IAAI,GAAGZ,SAAX;AACAY,UAAAA,IAAI,CAACC,IAAL,CAAUL,OAAV;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACAX,UAAAA,OAAO,CAACW,IAAD,CAAP;AACAF,UAAAA,OAAO;AACV,SAN6B,CAAP;AAMlB,OAPG;AAQRI,MAAAA,WAAW,EAAE,CAACN,OAAD,EAAUO,OAAV,KAAqB;AAAC,eAAO,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvE;AACAD,UAAAA,OAAO;AACV,SAHyC,CAAP;AAG9B,OAXG;AAYRM,MAAAA,WAAW,EAAED,OAAO,IAAI;AAAC,eAAO,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7DD,UAAAA,OAAO;AACV,SAF+B,CAAP;AAEpB;AAdG,KAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AA2BH,CAlCD;;AAoCA,eAAed,aAAf","sourcesContent":["import React, {useState} from 'react';\nimport MaterialTable from 'material-table';\n\nconst RoomInputGrid = (props) => {\n    const [tableData, setData] = useState([\n        { Material: \"Concrete\", Area: 22}\n    ]);\n    \n    console.log(tableData);\n\n    return (\n        <MaterialTable\n          columns={[\n            { title: \"Material\", field: \"Material\" },\n            { title: \"Area (M^2)\", field: \"Area\", type: \"numeric\" },\n          ]}\n          data={tableData}\n          title=\"Room Construction\"\n          editable={{\n            onRowAdd: newData => { return new Promise((resolve, reject) => {\n                let data = tableData;\n                data.push(newData);\n                console.log(data);\n                setData(data);\n                resolve();\n            }); },\n            onRowUpdate: (newData, oldData) =>{return new Promise((resolve, reject) => {\n                //setData(newData);\n                resolve();\n            }); },\n            onRowDelete: oldData => {return new Promise((resolve, reject) => {\n                resolve();\n            }); }\n\n        }}\n        />\n    );\n};\n\nexport default RoomInputGrid;"]},"metadata":{},"sourceType":"module"}