{"ast":null,"code":"import _defineProperty from \"/Users/LeonP-S/Documents/Development/Web/room-solver/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/LeonP-S/Documents/Development/Web/room-solver/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport ReactDataGrid from 'react-data-grid';\n\nconst RoomInputGrid = () => {\n  const columns = [{\n    key: \"id\",\n    name: \"ID\",\n    editable: true\n  }, {\n    key: \"title\",\n    name: \"Title\",\n    editable: true\n  }, {\n    key: \"complete\",\n    name: \"Complete\",\n    editable: true\n  }];\n  const rows = [{\n    id: 0,\n    title: \"Task 1\",\n    complete: 20\n  }, {\n    id: 1,\n    title: \"Task 2\",\n    complete: 40\n  }, {\n    id: 2,\n    title: \"Task 3\",\n    complete: 60\n  }];\n\n  const _useState = useState({\n    rows\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        tableData = _useState2[0],\n        updateTable = _useState2[1];\n\n  const onGridRowsUpdated = ({\n    fromRow,\n    toRow,\n    updated\n  }) => {\n    updateTable(state => {\n      const rows = tableData.rows.slice();\n\n      for (let i = fromRow; i <= toRow; i++) {\n        rows[i] = _objectSpread({}, rows[i], {}, updated);\n      }\n\n      return {\n        rows\n      };\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col s8 m8 l8 center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ReactDataGrid, {\n    columns: columns,\n    rowGetter: i => tableData.rows[i],\n    rowsCount: 3,\n    onGridRowsUpdated: onGridRowsUpdated,\n    enableCellSelect: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n};\n\nexport default RoomInputGrid;","map":{"version":3,"sources":["/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js"],"names":["React","useState","ReactDataGrid","RoomInputGrid","columns","key","name","editable","rows","id","title","complete","tableData","updateTable","onGridRowsUpdated","fromRow","toRow","updated","state","slice","i"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAMC,OAAO,GAAG,CACZ;AAAEC,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE,IAAnB;AAAyBC,IAAAA,QAAQ,EAAE;AAAnC,GADY,EAEZ;AAAEF,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,IAAI,EAAE,OAAtB;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAFY,EAGZ;AAAEF,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,IAAI,EAAE,UAAzB;AAAqCC,IAAAA,QAAQ,EAAE;AAA/C,GAHY,CAAhB;AAMA,QAAMC,IAAI,GAAG,CACT;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,QAAhB;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GADS,EAET;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,QAAhB;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GAFS,EAGT;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,QAAhB;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GAHS,CAAb;;AAPwB,oBAaSV,QAAQ,CAAC;AAACO,IAAAA;AAAD,GAAD,CAbjB;AAAA;AAAA,QAajBI,SAbiB;AAAA,QAaNC,WAbM;;AAexB,QAAMC,iBAAiB,GAAG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAAiC;AACvDJ,IAAAA,WAAW,CAACK,KAAK,IAAI;AACnB,YAAMV,IAAI,GAAGI,SAAS,CAACJ,IAAV,CAAeW,KAAf,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAGL,OAAb,EAAsBK,CAAC,IAAIJ,KAA3B,EAAkCI,CAAC,EAAnC,EAAuC;AACrCZ,QAAAA,IAAI,CAACY,CAAD,CAAJ,qBAAeZ,IAAI,CAACY,CAAD,CAAnB,MAA2BH,OAA3B;AACD;;AACD,aAAO;AAAET,QAAAA;AAAF,OAAP;AACD,KANU,CAAX;AAOH,GARD;;AAUA,SACI,0CACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AACA,IAAA,OAAO,EAAEJ,OADT;AAEA,IAAA,SAAS,EAAEgB,CAAC,IAAIR,SAAS,CAACJ,IAAV,CAAeY,CAAf,CAFhB;AAGA,IAAA,SAAS,EAAE,CAHX;AAIA,IAAA,iBAAiB,EAAEN,iBAJnB;AAKA,IAAA,gBAAgB,EAAE,IALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,CADA,CADJ;AAgBH,CAzCD;;AA2CA,eAAeX,aAAf","sourcesContent":["import React, {useState} from 'react';\nimport ReactDataGrid from 'react-data-grid';\n\nconst RoomInputGrid = () => {\n    const columns = [\n        { key: \"id\", name: \"ID\", editable: true },\n        { key: \"title\", name: \"Title\", editable: true },\n        { key: \"complete\", name: \"Complete\", editable: true }\n    ];\n      \n    const rows = [\n        { id: 0, title: \"Task 1\", complete: 20 },\n        { id: 1, title: \"Task 2\", complete: 40 },\n        { id: 2, title: \"Task 3\", complete: 60 }\n    ];\n\n    const [tableData, updateTable] = useState({rows});\n\n    const onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\n        updateTable(state => {\n          const rows = tableData.rows.slice();\n          for (let i = fromRow; i <= toRow; i++) {\n            rows[i] = { ...rows[i], ...updated };\n          }\n          return { rows };\n        });\n    };\n\n    return (\n        <>\n        <div className=\"row\">\n        <div className=\"col s8 m8 l8 center\">\n            <ReactDataGrid\n            columns={columns}\n            rowGetter={i => tableData.rows[i]}\n            rowsCount={3}\n            onGridRowsUpdated={onGridRowsUpdated}\n            enableCellSelect={true}\n            />\n            </div>\n            </div>\n        </>\n        \n    );\n};\n\nexport default RoomInputGrid;\n  "]},"metadata":{},"sourceType":"module"}