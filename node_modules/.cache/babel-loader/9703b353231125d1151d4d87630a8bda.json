{"ast":null,"code":"import _defineProperty from \"/Users/LeonP-S/Documents/Development/Web/room-solver/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/LeonP-S/Documents/Development/Web/room-solver/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LeonP-S/Documents/Development/Web/room-solver/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport LineGraph from './components/LineGraph';\nimport RoomInputGrid from './components/RoomInputGrid';\nimport MaterialGrid from './components/MaterialsGrid';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst App = () => {\n  const initialData = [{\n    Material: \"Brick\",\n    Area: 24\n  }, {\n    Material: \"Concrete\",\n    Area: 9\n  }, {\n    Material: \"Plaster\",\n    Area: 9\n  }];\n\n  const _useState = useState({\n    data: initialData,\n    volume: 18\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        plotData = _useState2[0],\n        setPlot = _useState2[1];\n\n  const UpdatePlot = data => {\n    setPlot(_objectSpread({}, plotData, {\n      data\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Instructions - Room Solver\"), React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"When adding to the room construction list ensure the material name matches the material name given in the \\\"Room Materials Table\\\". Written by Leon P-S\"))), React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(MaterialGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Volume (m^3)\",\n    value: plotData.volume,\n    onChange: event => {\n      setPlot(_objectSpread({}, plotData, {\n        volume: event.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(RoomInputGrid, {\n    updatePlot: UpdatePlot,\n    data: initialData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(LineGraph, {\n    plot: plotData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/LeonP-S/Documents/Development/Web/room-solver/src/App.js"],"names":["React","useState","LineGraph","RoomInputGrid","MaterialGrid","Grid","TextField","Paper","Typography","App","initialData","Material","Area","data","volume","plotData","setPlot","UpdatePlot","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport LineGraph  from './components/LineGraph';\nimport RoomInputGrid from './components/RoomInputGrid';\nimport MaterialGrid from './components/MaterialsGrid';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst App = () => {\n\n    const initialData = [\n        { Material: \"Brick\", Area: 24},\n        { Material: \"Concrete\", Area: 9},\n        { Material: \"Plaster\", Area: 9},\n    ];\n    \n    const [plotData, setPlot] = useState({data: initialData, volume: 18});\n\n    const UpdatePlot = (data) => {\n        setPlot({...plotData, data});\n    };\n\n    return (\n        <>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item xs={10} align=\"center\">\n                    <Paper>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            Instructions - Room Solver\n                        </Typography>\n                        <Typography component=\"p\">\n                            When adding to the room construction list ensure the material name matches the material name given in the \"Room Materials Table\".  \n                            Written by Leon P-S\n                        </Typography>\n                    </Paper>\n                </Grid>\n                <Grid item xs={10}>\n                    <MaterialGrid />\n                </Grid>\n                <Grid item xs={12} align=\"center\">\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"Volume (m^3)\"\n                        value={plotData.volume}\n                        onChange={(event) => {\n                            setPlot({...plotData, volume: event.target.value});\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={10}>\n                    <RoomInputGrid updatePlot={UpdatePlot} data={initialData}/>\n                </Grid>\n                <Grid item xs={10} align=\"center\">\n                    <LineGraph plot={plotData}/>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}