{"ast":null,"code":"import _slicedToArray from \"/Users/LeonP-S/Documents/Development/Web/room-solver/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js\";\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\n\nconst RoomInputGrid = props => {\n  const _useState = useState({\n    data: [{\n      Material: \"Concrete\",\n      Area: 22\n    }],\n    resolve: () => {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        tableData = _useState2[0],\n        setTableData = _useState2[1];\n\n  useEffect(() => {\n    tableData.resolve();\n    props.update(\"EPIC\");\n  }, [tableData]);\n  return React.createElement(MaterialTable, {\n    options: {\n      search: false\n    },\n    columns: [{\n      title: \"Material\",\n      field: \"Material\"\n    }, {\n      title: \"Area (M^2)\",\n      field: \"Area\",\n      type: \"numeric\"\n    }],\n    data: tableData.data,\n    title: \"Room Construction\",\n    editable: {\n      onRowAdd: newData => {\n        return new Promise((resolve, reject) => {\n          const data = tableData.data;\n          data.push(newData);\n          setTableData({\n            data,\n            resolve\n          });\n        });\n      },\n      onRowUpdate: (newData, oldData) => {\n        return new Promise((resolve, reject) => {\n          const data = tableData.data;\n          const index = data.indexOf(oldData);\n          data[index] = newData;\n          setTableData({\n            data,\n            resolve\n          });\n        });\n      },\n      onRowDelete: oldData => {\n        return new Promise((resolve, reject) => {\n          const data = tableData.data;\n          const index = data.indexOf(oldData);\n          data.splice(index, 1);\n          setTableData({\n            data,\n            resolve\n          });\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n};\n\nexport default RoomInputGrid;","map":{"version":3,"sources":["/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js"],"names":["React","useState","useEffect","MaterialTable","Grid","RoomInputGrid","props","data","Material","Area","resolve","tableData","setTableData","update","search","title","field","type","onRowAdd","newData","Promise","reject","push","onRowUpdate","oldData","index","indexOf","onRowDelete","splice"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA,oBACKL,QAAQ,CAAC;AACvCM,IAAAA,IAAI,EAAE,CACF;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KADE,CADiC;AAIvCC,IAAAA,OAAO,EAAE,MAAM,CAAE;AAJsB,GAAD,CADb;AAAA;AAAA,QACtBC,SADsB;AAAA,QACXC,YADW;;AAQ7BV,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,SAAS,CAACD,OAAV;AACAJ,IAAAA,KAAK,CAACO,MAAN,CAAa,MAAb;AACH,GAHQ,EAGN,CAACF,SAAD,CAHM,CAAT;AAKA,SACI,oBAAC,aAAD;AACE,IAAA,OAAO,EAAE;AACPG,MAAAA,MAAM,EAAE;AADD,KADX;AAIE,IAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KADO,EAEP;AAAED,MAAAA,KAAK,EAAE,YAAT;AAAuBC,MAAAA,KAAK,EAAE,MAA9B;AAAsCC,MAAAA,IAAI,EAAE;AAA5C,KAFO,CAJX;AAQE,IAAA,IAAI,EAAEN,SAAS,CAACJ,IARlB;AASE,IAAA,KAAK,EAAC,mBATR;AAUE,IAAA,QAAQ,EAAE;AACRW,MAAAA,QAAQ,EAAEC,OAAO,IAAI;AACjB,eAAO,IAAIC,OAAJ,CAAY,CAACV,OAAD,EAAUW,MAAV,KAAqB;AAAA,gBAC5Bd,IAD4B,GACnBI,SADmB,CAC5BJ,IAD4B;AAEpCA,UAAAA,IAAI,CAACe,IAAL,CAAUH,OAAV;AACAP,UAAAA,YAAY,CAAC;AAACL,YAAAA,IAAD;AAAOG,YAAAA;AAAP,WAAD,CAAZ;AACH,SAJM,CAAP;AAKH,OAPO;AAQRa,MAAAA,WAAW,EAAE,CAACJ,OAAD,EAAUK,OAAV,KAAsB;AAC/B,eAAO,IAAIJ,OAAJ,CAAY,CAACV,OAAD,EAAUW,MAAV,KAAqB;AAAA,gBAC5Bd,IAD4B,GACnBI,SADmB,CAC5BJ,IAD4B;AAEpC,gBAAMkB,KAAK,GAAGlB,IAAI,CAACmB,OAAL,CAAaF,OAAb,CAAd;AACAjB,UAAAA,IAAI,CAACkB,KAAD,CAAJ,GAAcN,OAAd;AACAP,UAAAA,YAAY,CAAC;AAACL,YAAAA,IAAD;AAAOG,YAAAA;AAAP,WAAD,CAAZ;AACH,SALM,CAAP;AAMH,OAfO;AAgBRiB,MAAAA,WAAW,EAAEH,OAAO,IAAI;AACpB,eAAO,IAAIJ,OAAJ,CAAY,CAACV,OAAD,EAAUW,MAAV,KAAqB;AAAA,gBAC5Bd,IAD4B,GACnBI,SADmB,CAC5BJ,IAD4B;AAEpC,gBAAMkB,KAAK,GAAGlB,IAAI,CAACmB,OAAL,CAAaF,OAAb,CAAd;AACAjB,UAAAA,IAAI,CAACqB,MAAL,CAAYH,KAAZ,EAAmB,CAAnB;AACAb,UAAAA,YAAY,CAAC;AAACL,YAAAA,IAAD;AAAOG,YAAAA;AAAP,WAAD,CAAZ;AACH,SALM,CAAP;AAMH;AAvBO,KAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAuCH,CApDD;;AAsDA,eAAeL,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\n\nconst RoomInputGrid = (props) => {\n    const [tableData, setTableData] = useState({\n        data: [\n            { Material: \"Concrete\", Area: 22}\n        ],\n        resolve: () => {}\n    });\n\n    useEffect(() => {\n        tableData.resolve();\n        props.update(\"EPIC\");\n    }, [tableData]);\n\n    return (\n        <MaterialTable\n          options={{\n            search: false\n          }}\n          columns={[\n            { title: \"Material\", field: \"Material\" },\n            { title: \"Area (M^2)\", field: \"Area\", type: \"numeric\" },\n          ]}\n          data={tableData.data}\n          title=\"Room Construction\"\n          editable={{\n            onRowAdd: newData => { \n                return new Promise((resolve, reject) => {\n                    const { data } = tableData;\n                    data.push(newData);\n                    setTableData({data, resolve});\n                }); \n            },\n            onRowUpdate: (newData, oldData) => {\n                return new Promise((resolve, reject) => {\n                    const { data } = tableData;\n                    const index = data.indexOf(oldData);\n                    data[index] = newData;\n                    setTableData({data, resolve});\n                }); \n            },\n            onRowDelete: oldData => {\n                return new Promise((resolve, reject) => {\n                    const { data } = tableData;\n                    const index = data.indexOf(oldData);\n                    data.splice(index, 1);\n                    setTableData({data, resolve});\n                }); \n            }\n\n        }}\n        />\n    );\n};\n\nexport default RoomInputGrid;"]},"metadata":{},"sourceType":"module"}