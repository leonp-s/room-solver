{"ast":null,"code":"import RoomData from './RoomData';\n\nconst RT60 = (volume, surfaceAbsorbtion) => {\n  return 0.161 * volume / surfaceAbsorbtion;\n};\n\nconst SurfaceAbsorption = (surfaces, frequency) => {\n  let A = 0;\n  surfaces.forEach(element => {\n    RoomData.forEach(roomElement => {\n      if (element.Material === roomElement.Material) {\n        A += parseInt(element.Area) * roomElement[frequency];\n      }\n    });\n  });\n  console.log(A);\n  return A;\n};\n\nconst RoomAnalysis = (surfaces, volume) => {\n  let analysis = [];\n  Object.keys(RoomData[0]).forEach(frequency => {\n    if (frequency !== \"Material\" && frequency !== \"tableData\") {\n      analysis.push([parseInt(frequency), RT60(volume, SurfaceAbsorption(surfaces, frequency))]);\n    }\n  });\n  return analysis;\n};\n\nexport default RoomAnalysis;\n/* USEAGE\nlet testA = SurfaceAbsorption([[24, 0.05], [9, 0.02], [9, 0.14]]);\nconsole.log(RT60(18, testA));\n*/","map":{"version":3,"sources":["/Users/LeonP-S/Documents/Development/Web/room-solver/src/utilities/RoomSolver.js"],"names":["RoomData","RT60","volume","surfaceAbsorbtion","SurfaceAbsorption","surfaces","frequency","A","forEach","element","roomElement","Material","parseInt","Area","console","log","RoomAnalysis","analysis","Object","keys","push"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;;AAEA,MAAMC,IAAI,GAAG,CAACC,MAAD,EAASC,iBAAT,KAA+B;AACxC,SAAQ,QAAQD,MAAT,GAAoBC,iBAA3B;AACH,CAFD;;AAIA,MAAMC,iBAAiB,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AAC/C,MAAIC,CAAC,GAAG,CAAR;AACAF,EAAAA,QAAQ,CAACG,OAAT,CAAiBC,OAAO,IAAI;AACxBT,IAAAA,QAAQ,CAACQ,OAAT,CAAiBE,WAAW,IAAI;AAC5B,UAAGD,OAAO,CAACE,QAAR,KAAqBD,WAAW,CAACC,QAApC,EACA;AACIJ,QAAAA,CAAC,IAAKK,QAAQ,CAACH,OAAO,CAACI,IAAT,CAAR,GAAyBH,WAAW,CAACJ,SAAD,CAA1C;AACH;AACJ,KALD;AAMH,GAPD;AAQAQ,EAAAA,OAAO,CAACC,GAAR,CAAYR,CAAZ;AACA,SAAOA,CAAP;AACH,CAZD;;AAcA,MAAMS,YAAY,GAAG,CAACX,QAAD,EAAWH,MAAX,KAAsB;AACvC,MAAIe,QAAQ,GAAG,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYnB,QAAQ,CAAC,CAAD,CAApB,EAAyBQ,OAAzB,CAAkCF,SAAD,IAAe;AAC5C,QAAGA,SAAS,KAAK,UAAd,IAA4BA,SAAS,KAAK,WAA7C,EACA;AACIW,MAAAA,QAAQ,CAACG,IAAT,CAAc,CAACR,QAAQ,CAACN,SAAD,CAAT,EAAsBL,IAAI,CAACC,MAAD,EAASE,iBAAiB,CAACC,QAAD,EAAWC,SAAX,CAA1B,CAA1B,CAAd;AACH;AACJ,GALD;AAMA,SAAOW,QAAP;AACH,CATD;;AAWA,eAAeD,YAAf;AACA","sourcesContent":["import RoomData from './RoomData';\n\nconst RT60 = (volume, surfaceAbsorbtion) => {\n    return (0.161 * volume) / (surfaceAbsorbtion)\n}\n\nconst SurfaceAbsorption = (surfaces, frequency) => {\n    let A = 0;\n    surfaces.forEach(element => {\n        RoomData.forEach(roomElement => {\n            if(element.Material === roomElement.Material)\n            {\n                A += (parseInt(element.Area) * roomElement[frequency])\n            }\n        });\n    });\n    console.log(A)\n    return A;\n}\n\nconst RoomAnalysis = (surfaces, volume) => {\n    let analysis = [];\n    Object.keys(RoomData[0]).forEach((frequency) => {\n        if(frequency !== \"Material\" && frequency !== \"tableData\")\n        {\n            analysis.push([parseInt(frequency), RT60(volume, SurfaceAbsorption(surfaces, frequency))]);\n        }\n    });\n    return analysis;\n}\n\nexport default RoomAnalysis;\n/* USEAGE\nlet testA = SurfaceAbsorption([[24, 0.05], [9, 0.02], [9, 0.14]]);\nconsole.log(RT60(18, testA));\n*/"]},"metadata":{},"sourceType":"module"}