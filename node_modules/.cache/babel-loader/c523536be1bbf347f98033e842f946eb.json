{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar Table = require('./Table');\n\nvar Pagination = require('./Pagination');\n\nvar SelectField = require('./SelectField');\n\nvar SearchField = require('./SearchField');\n\nvar Counter = require('./Counter');\n\nvar DataMixin = require('./DataMixin');\n\nvar DataTable = React.createClass({\n  displayName: 'DataTable',\n  mixins: [DataMixin],\n  render: function render() {\n    var page = this.buildPage(); // const cols = this.props.columns.slice(0);\n    // cols.unshift({title: '', prop: 'checked', sort: false, editable: false });\n\n    return React.createElement('div', {\n      className: this.props.className\n    }, React.createElement('div', {\n      className: 'row table-options'\n    }, React.createElement('div', {\n      className: 'col-xs-4'\n    }, React.createElement(SelectField, {\n      id: 'page-menu',\n      label: 'Page size:',\n      value: this.state.pageLength,\n      options: this.props.pageLengthOptions,\n      onChange: this.onPageLengthChange\n    })), React.createElement('div', {\n      className: 'col-xs-6 col-xs-offset-2'\n    }, React.createElement(SearchField, {\n      id: 'search-field pull-right',\n      ref: 'search',\n      label: 'Search:',\n      value: this.state.filterValues.globalSearch,\n      searchIcon: this.props.searchIcon,\n      searchBtnClass: this.props.searchBtnClass,\n      onChange: this.onFilter.bind(this, 'globalSearch')\n    }))), React.createElement(Table, {\n      className: 'table table-bordered editable-table',\n      dataArray: page.data,\n      columns: this.props.columns,\n      keys: this.props.keys,\n      sortBy: this.state.sortBy,\n      onSort: this.onSort,\n      onToggleCheckAll: this.handleToggleCheckAll,\n      onChange: this.handleChange,\n      onDelete: this.handleDelete,\n      onAdd: this.handleAdd\n    }), React.createElement('div', {\n      className: 'row'\n    }, React.createElement('div', {\n      className: 'col-xs-4'\n    }, React.createElement(Counter, {\n      showing: this.state.pageLength * page.currentPage + 1,\n      to: this.state.pageLength * page.currentPage + page.data.length,\n      count: this.state.data.length\n    })), React.createElement('div', {\n      className: 'col-xs-8'\n    }, React.createElement(Pagination, {\n      className: 'pagination pull-right pagination-sm',\n      currentPage: page.currentPage,\n      totalPages: page.totalPages,\n      onChangePage: this.onChangePage\n    }))));\n  }\n});\nmodule.exports = DataTable;\n/*\r\n <div className=\"row\">\r\n <pre>\r\n <code>\r\n {JSON.stringify(this.state.data, null, \"\\t\")}\r\n </code>\r\n </pre>\r\n </div>\r\n */","map":null,"metadata":{},"sourceType":"script"}