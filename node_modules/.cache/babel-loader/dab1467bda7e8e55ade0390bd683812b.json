{"ast":null,"code":"import RoomData from'./RoomData';var RT60=function RT60(volume,surfaceAbsorbtion){return 0.161*volume/surfaceAbsorbtion;};var SurfaceAbsorption=function SurfaceAbsorption(surfaces,frequency){var A=0;surfaces.forEach(function(element){RoomData.forEach(function(roomElement){if(element.Material===roomElement.Material){A+=parseInt(element.Area)*roomElement[frequency];}});});return A;};var RoomAnalysis=function RoomAnalysis(surfaces,volume){var analysis=[];Object.keys(RoomData[0]).forEach(function(frequency){if(frequency!==\"Material\"&&frequency!==\"tableData\")// Apparently material-tables appends data to the object...\n{analysis.push([parseInt(frequency),RT60(volume,SurfaceAbsorption(surfaces,frequency))]);}});return analysis;};export default RoomAnalysis;/* USEAGE\nlet testA = SurfaceAbsorption([[24, 0.05], [9, 0.02], [9, 0.14]]);\nconsole.log(RT60(18, testA));\n*/","map":{"version":3,"sources":["/Users/LeonP-S/Documents/Development/Web/room-solver/src/utilities/RoomSolver.js"],"names":["RoomData","RT60","volume","surfaceAbsorbtion","SurfaceAbsorption","surfaces","frequency","A","forEach","element","roomElement","Material","parseInt","Area","RoomAnalysis","analysis","Object","keys","push"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,MAAD,CAASC,iBAAT,CAA+B,CACxC,MAAQ,OAAQD,MAAT,CAAoBC,iBAA3B,CACH,CAFD,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,QAAD,CAAWC,SAAX,CAAyB,CAC/C,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACAF,QAAQ,CAACG,OAAT,CAAiB,SAAAC,OAAO,CAAI,CACxBT,QAAQ,CAACQ,OAAT,CAAiB,SAAAE,WAAW,CAAI,CAC5B,GAAGD,OAAO,CAACE,QAAR,GAAqBD,WAAW,CAACC,QAApC,CACA,CACIJ,CAAC,EAAKK,QAAQ,CAACH,OAAO,CAACI,IAAT,CAAR,CAAyBH,WAAW,CAACJ,SAAD,CAA1C,CACH,CACJ,CALD,EAMH,CAPD,EAQA,MAAOC,CAAAA,CAAP,CACH,CAXD,CAaA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACT,QAAD,CAAWH,MAAX,CAAsB,CACvC,GAAIa,CAAAA,QAAQ,CAAG,EAAf,CACAC,MAAM,CAACC,IAAP,CAAYjB,QAAQ,CAAC,CAAD,CAApB,EAAyBQ,OAAzB,CAAiC,SAACF,SAAD,CAAe,CAC5C,GAAGA,SAAS,GAAK,UAAd,EAA4BA,SAAS,GAAK,WAA7C,CAA0D;AAC1D,CACIS,QAAQ,CAACG,IAAT,CAAc,CAACN,QAAQ,CAACN,SAAD,CAAT,CAAsBL,IAAI,CAACC,MAAD,CAASE,iBAAiB,CAACC,QAAD,CAAWC,SAAX,CAA1B,CAA1B,CAAd,EACH,CACJ,CALD,EAMA,MAAOS,CAAAA,QAAP,CACH,CATD,CAWA,cAAeD,CAAAA,YAAf,CACA","sourcesContent":["import RoomData from './RoomData';\n\nconst RT60 = (volume, surfaceAbsorbtion) => {\n    return (0.161 * volume) / (surfaceAbsorbtion)\n}\n\nconst SurfaceAbsorption = (surfaces, frequency) => {\n    let A = 0;\n    surfaces.forEach(element => {\n        RoomData.forEach(roomElement => {\n            if(element.Material === roomElement.Material)\n            {\n                A += (parseInt(element.Area) * roomElement[frequency])\n            }\n        });\n    });\n    return A;\n}\n\nconst RoomAnalysis = (surfaces, volume) => {\n    let analysis = [];\n    Object.keys(RoomData[0]).forEach((frequency) => {\n        if(frequency !== \"Material\" && frequency !== \"tableData\") // Apparently material-tables appends data to the object...\n        {\n            analysis.push([parseInt(frequency), RT60(volume, SurfaceAbsorption(surfaces, frequency))]);\n        }\n    });\n    return analysis;\n}\n\nexport default RoomAnalysis;\n/* USEAGE\nlet testA = SurfaceAbsorption([[24, 0.05], [9, 0.02], [9, 0.14]]);\nconsole.log(RT60(18, testA));\n*/"]},"metadata":{},"sourceType":"module"}