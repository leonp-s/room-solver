{"ast":null,"code":"var _jsxFileName = \"/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\n\nconst RoomInputGrid = () => {\n  return React.createElement(MaterialTable, {\n    columns: [{\n      title: \"Ad\",\n      field: \"name\"\n    }, {\n      title: \"Soyad\",\n      field: \"surname\"\n    }, {\n      title: \"Doğum\",\n      field: \"birthYear\",\n      type: \"numeric\"\n    }],\n    data: [{\n      name: \"Mehmet\",\n      surname: \"Baran\",\n      birthYear: 1987\n    }, {\n      name: \"Mehmet\",\n      surname: \"Baran\",\n      birthYear: 1987\n    }, {\n      name: \"Mehmet\",\n      surname: \"Baran\",\n      birthYear: 1987\n    }],\n    title: \"Room Construction\",\n    editable: {\n      isEditable: rowData => rowData.name === \"a\",\n      // only name(a) rows would be editable\n      isDeletable: rowData => rowData.name === \"b\",\n      // only name(a) rows would be deletable\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* const data = this.state.data;\n            data.push(newData);\n            this.setState({ data }, () => resolve()); */\n          }\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* const data = this.state.data;\n            const index = data.indexOf(oldData);\n            data[index] = newData;                \n            this.setState({ data }, () => resolve()); */\n          }\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          {\n            /* let data = this.state.data;\n            const index = data.indexOf(oldData);\n            data.splice(index, 1);\n            this.setState({ data }, () => resolve()); */\n          }\n          resolve();\n        }, 1000);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  });\n};\n\nexport default RoomInputGrid;","map":{"version":3,"sources":["/Users/LeonP-S/Documents/Development/Web/room-solver/src/components/RoomInputGrid.js"],"names":["React","MaterialTable","RoomInputGrid","title","field","type","name","surname","birthYear","isEditable","rowData","isDeletable","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,SACI,oBAAC,aAAD;AACE,IAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KADO,EAEP;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAFO,EAGP;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE,WAAzB;AAAsCC,MAAAA,IAAI,EAAE;AAA5C,KAHO,CADX;AAME,IAAA,IAAI,EAAE,CACJ;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE,OAA3B;AAAoCC,MAAAA,SAAS,EAAE;AAA/C,KADI,EAEJ;AAAEF,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE,OAA3B;AAAoCC,MAAAA,SAAS,EAAE;AAA/C,KAFI,EAGJ;AAAEF,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE,OAA3B;AAAoCC,MAAAA,SAAS,EAAE;AAA/C,KAHI,CANR;AAWE,IAAA,KAAK,EAAC,mBAXR;AAYE,IAAA,QAAQ,EAAE;AACRC,MAAAA,UAAU,EAAEC,OAAO,IAAIA,OAAO,CAACJ,IAAR,KAAiB,GADhC;AACqC;AAC7CK,MAAAA,WAAW,EAAED,OAAO,IAAIA,OAAO,CAACJ,IAAR,KAAiB,GAFjC;AAEsC;AAC9CM,MAAAA,QAAQ,EAAEC,OAAO,IACb,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7BC,QAAAA,UAAU,CAAC,MAAM;AACb;AACI;;;AAGH;AACDF,UAAAA,OAAO;AACV,SAPS,EAOP,IAPO,CAAV;AAQH,OATD,CAJI;AAcRG,MAAAA,WAAW,EAAE,CAACL,OAAD,EAAUM,OAAV,KACT,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7BC,QAAAA,UAAU,CAAC,MAAM;AACb;AACI;;;;AAIH;AACDF,UAAAA,OAAO;AACV,SARS,EAQP,IARO,CAAV;AASH,OAVD,CAfI;AA0BRK,MAAAA,WAAW,EAAED,OAAO,IAChB,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7BC,QAAAA,UAAU,CAAC,MAAM;AACb;AACI;;;;AAIH;AACDF,UAAAA,OAAO;AACV,SARS,EAQP,IARO,CAAV;AASH,OAVD;AA3BI,KAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAsDH,CAvDD;;AAyDA,eAAeb,aAAf","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\n\nconst RoomInputGrid = () => {\n    return (\n        <MaterialTable\n          columns={[\n            { title: \"Ad\", field: \"name\" },\n            { title: \"Soyad\", field: \"surname\" },\n            { title: \"Doğum\", field: \"birthYear\", type: \"numeric\" },\n          ]}\n          data={[\n            { name: \"Mehmet\", surname: \"Baran\", birthYear: 1987 },\n            { name: \"Mehmet\", surname: \"Baran\", birthYear: 1987 },\n            { name: \"Mehmet\", surname: \"Baran\", birthYear: 1987 }\n          ]}\n          title=\"Room Construction\"\n          editable={{\n            isEditable: rowData => rowData.name === \"a\", // only name(a) rows would be editable\n            isDeletable: rowData => rowData.name === \"b\", // only name(a) rows would be deletable\n            onRowAdd: newData =>\n                new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                        {\n                            /* const data = this.state.data;\n                            data.push(newData);\n                            this.setState({ data }, () => resolve()); */\n                        }\n                        resolve();\n                    }, 1000);\n                }),\n            onRowUpdate: (newData, oldData) =>\n                new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                        {\n                            /* const data = this.state.data;\n                            const index = data.indexOf(oldData);\n                            data[index] = newData;                \n                            this.setState({ data }, () => resolve()); */\n                        }\n                        resolve();\n                    }, 1000);\n                }),\n            onRowDelete: oldData =>\n                new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                        {\n                            /* let data = this.state.data;\n                            const index = data.indexOf(oldData);\n                            data.splice(index, 1);\n                            this.setState({ data }, () => resolve()); */\n                        }\n                        resolve();\n                    }, 1000);\n                })\n        }}\n        />\n    );\n};\n\nexport default RoomInputGrid;"]},"metadata":{},"sourceType":"module"}