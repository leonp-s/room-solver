{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar TextEditor = React.createClass({\n  displayName: 'TextEditor',\n  getInitialState: function getInitialState() {\n    return {\n      value: this.props.value\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.getDOMNode().focus();\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.value\n    });\n  },\n  handleChange: function handleChange(ev) {\n    this.setState({\n      value: ev.target.value\n    });\n  },\n  handleFocus: function handleFocus(ev) {\n    ev.target.focus();\n    var length = ev.target.value.length;\n    ev.target.setSelectionRange(length, length);\n  },\n  handleSave: function handleSave(ev) {\n    this.props.onCancel();\n    this.props.onChange(this.state.value);\n  },\n  handleBlur: function handleBlur(ev) {\n    if (this.props.col.hasOwnProperty('validation')) {\n      if (this.props.col.validation.test(ev.target.value)) {\n        this.handleSave();\n      } else {\n        this.props.onCancel(this.props.col, this.props.row, this.props.target);\n      }\n    } else {\n      this.handleSave();\n    }\n  },\n  handleKeyUp: function handleKeyUp(ev) {\n    if (ev.keyCode === 13) {\n      this.handleSave(ev);\n    }\n\n    if (ev.keyCode === 27) {\n      this.props.onCancel(this.props.col, this.props.row, this.props.target);\n    }\n  },\n  render: function render() {\n    return React.createElement('input', {\n      type: 'text',\n      style: {\n        width: '100%'\n      },\n      className: 'edit-input',\n      value: this.state.value,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      onFocus: this.handleFocus,\n      onKeyUp: this.handleKeyUp\n    });\n  }\n});\nmodule.exports = TextEditor;","map":null,"metadata":{},"sourceType":"script"}